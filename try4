#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/ipc.h>
#include <sys/shm.h>
#include <sys/sem.h>
#include <sys/wait.h>

int main() {
    int shm_id = shmget(IPC_PRIVATE, sizeof(int), IPC_CREAT | 0666);
    int *sum = (int *)shmat(shm_id, NULL, 0);
    *sum = 0;

    int mutex = semget(IPC_PRIVATE, 1, IPC_CREAT | 0666);
    semctl(mutex, 0, SETVAL, 1);

    struct sembuf wait_op = {0, -1, 0};
    struct sembuf signal_op = {0, 1, 0};

    for (int i = 1; i <= 100; i++) {
        int num = i;
        if (fork() == 0) {
            semop(mutex, &wait_op, 1);
            *sum += num;
            semop(mutex, &signal_op, 1);
            shmdt(sum);
            exit(0);
        }
    }

    for (int i = 0; i < 100; i++) wait(NULL);

    printf("%d\n", *sum);

    shmdt(sum);
    shmctl(shm_id, IPC_RMID, NULL);
    semctl(mutex, 0, IPC_RMID);

    return 0;
}
